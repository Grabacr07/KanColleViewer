<UserControl x:Class="Grabacr07.KanColleViewer.Views.Contents.Overview"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
			 xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
			 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
			 xmlns:livet="http://schemas.livet-mvvm.net/2011/wpf"
			 xmlns:metro2="clr-namespace:Grabacr07.Desktop.Metro.Controls;assembly=Desktop.Metro"
			 xmlns:properties="clr-namespace:Grabacr07.KanColleViewer.Properties"
			 xmlns:vContents="clr-namespace:Grabacr07.KanColleViewer.Views.Contents"
			 xmlns:vmContents="clr-namespace:Grabacr07.KanColleViewer.ViewModels.Contents"
			 xmlns:controls="clr-namespace:Grabacr07.KanColleViewer.Views.Controls"
			 xmlns:converters="clr-namespace:Grabacr07.KanColleViewer.Views.Converters"
			 xmlns:catalogs="clr-namespace:Grabacr07.KanColleViewer.Views.Catalogs"
			 xmlns:models="clr-namespace:Grabacr07.KanColleViewer.Models"
			 xmlns:behaviors="clr-namespace:Grabacr07.KanColleViewer.Views.Behaviors"
			 mc:Ignorable="d"
			 d:DataContext="{d:DesignInstance vmContents:OverviewViewModel}"
			 d:DesignWidth="680"
			 d:DesignHeight="333">
	<UserControl.Resources>
		<ResourceDictionary>
			<Style TargetType="{x:Type Border}">
				<Setter Property="BorderBrush"
						Value="{DynamicResource BorderBrushKey}" />
				<Setter Property="BorderThickness"
						Value="1" />
				<Setter Property="Padding"
						Value="8" />
				<Setter Property="Margin"
						Value="5,0,5,10" />
			</Style>

			<Style x:Key="JumbButtonStyleKey"
				   TargetType="{x:Type metro2:CallMethodButton}"
				   BasedOn="{StaticResource {x:Type metro2:CallMethodButton}}">
				<Setter Property="Background"
						Value="Transparent" />
				<Setter Property="Padding"
						Value="8" />
				<Setter Property="HorizontalContentAlignment"
						Value="Stretch" />
				<Setter Property="VerticalContentAlignment"
						Value="Stretch" />
				<Setter Property="Margin"
						Value="5,0,5,10" />
			</Style>

			<Style TargetType="{x:Type ToolTip}">
				<Setter Property="OverridesDefaultStyle"
						Value="True" />
				<Setter Property="HasDropShadow"
						Value="True" />
				<Setter Property="Foreground"
						Value="{DynamicResource AccentForegroundBrushKey}" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="ToolTip">
							<Border Name="Border"
									BorderThickness="1"
									BorderBrush="{DynamicResource BorderBrushKey}"
									Background="{DynamicResource BackgroundBrushKey}"
									Padding="8,4"
									SnapsToDevicePixels="True">
								<ContentPresenter />
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<Style TargetType="{x:Type TextBlock}"
				   BasedOn="{StaticResource DefaultTextStyleKey}" />
		</ResourceDictionary>
	</UserControl.Resources>

	<i:Interaction.Triggers>
		<livet:InteractionMessageTrigger Messenger="{Binding Messenger}"
										 MessageKey="Show/ShipCatalogWindow">
			<livet:TransitionInteractionMessageAction Mode="NewOrActive"
													  WindowType="catalogs:ShipCatalogWindow"
													  IsOwned="False" />
		</livet:InteractionMessageTrigger>
		<livet:InteractionMessageTrigger Messenger="{Binding Messenger}"
										 MessageKey="Show/SlotItemCatalogWindow">
			<livet:TransitionInteractionMessageAction Mode="NewOrActive"
													  WindowType="catalogs:SlotItemCatalogWindow"
													  IsOwned="False" />
		</livet:InteractionMessageTrigger>
	</i:Interaction.Triggers>


	<ScrollViewer VerticalScrollBarVisibility="Auto"
				  PanningMode="Both">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="220" />
				<ColumnDefinition Width="Auto"
								  MinWidth="140" />
			</Grid.ColumnDefinitions>

			<Border VerticalAlignment="Top">
				<DockPanel DataContext="{Binding Content.Fleets}">
					<ListBox DockPanel.Dock="Top"
							 ItemsSource="{Binding Fleets}"
							 SelectedValue="{Binding SelectedFleet, Mode=TwoWay}"
							 Style="{DynamicResource HorizontalFlatListBoxStyleKey}">
						<ItemsControl.ItemTemplate>
							<DataTemplate>
								<Border Padding="0,0,18,0"
										Background="Transparent">
									<StackPanel Orientation="Horizontal">
										<vContents:StateIconIndicator Width="12"
																	  Height="12"
																	  Margin="0,2,4,1" />
										<TextBlock x:Name="FleetName"
												   Text="{Binding Id, StringFormat='/{0}'}"
												   Style="{DynamicResource DefaultTextStyleKey}"
												   Foreground="{DynamicResource ActiveForegroundBrushKey}" />
									</StackPanel>
								</Border>
								<DataTemplate.Triggers>
									<DataTrigger Binding="{Binding IsSelected}"
												 Value="True">
										<Setter TargetName="FleetName"
												Property="Text"
												Value="{Binding Name}" />
									</DataTrigger>
								</DataTemplate.Triggers>
							</DataTemplate>
						</ItemsControl.ItemTemplate>
					</ListBox>

					<vContents:StateDetailIndicator DockPanel.Dock="Top"
													DataContext="{Binding SelectedFleet}"
													Margin="0,7,0,3" />

					<ScrollViewer HorizontalScrollBarVisibility="Auto"
								  VerticalScrollBarVisibility="Disabled">
						<ItemsControl ItemsSource="{Binding SelectedFleet.Ships}"
									  Background="Transparent"
									  Grid.IsSharedSizeScope="True">
							<i:Interaction.Triggers>
								<behaviors:FlickTrigger>
									<behaviors:FlickFleetsAction TargetObject="{Binding}"
																 IsCyclic="True"
																 Orientation="Horizontal" />
								</behaviors:FlickTrigger>
							</i:Interaction.Triggers>
							<ItemsControl.ItemTemplate>
								<DataTemplate>
									<StackPanel Margin="0,2,0,0">
										<StackPanel.Resources>
											<Style TargetType="{x:Type TextBlock}"
												   BasedOn="{StaticResource DefaultTextStyleKey}">
												<Setter Property="TextWrapping"
														Value="NoWrap" />
											</Style>
										</StackPanel.Resources>

										<Grid HorizontalAlignment="Left">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="Auto"
																  SharedSizeGroup="Name" />
												<ColumnDefinition Width="Auto"
																  SharedSizeGroup="Level" />
												<ColumnDefinition Width="Auto"
																  SharedSizeGroup="HP" />
												<ColumnDefinition Width="Auto"
																  SharedSizeGroup="Condition" />
											</Grid.ColumnDefinitions>

											<TextBlock ToolTipService.Placement="Relative"
													   ToolTipService.HorizontalOffset="-9"
													   ToolTipService.VerticalOffset="-3">
											<Run Text="{Binding Ship.Info.Name, Mode=OneWay}"
												 Style="{DynamicResource EmphaticTextElementStyleKey}" />
											<LineBreak />
											<Run Text="{Binding Ship.Info.ShipType.Name, Mode=OneWay}"
												 FontSize="11" />
												<TextBlock.ToolTip>
													<TextBlock Margin="0,-2,0,0">
													<Run Text="{Binding Ship.Info.Name, Mode=OneWay}"
														 Style="{DynamicResource EmphaticTextElementStyleKey}" />
													<LineBreak />
													<Run Text="{Binding Ship.Info.ShipType.Name, Mode=OneWay}"
														 FontSize="11" />
													</TextBlock>
												</TextBlock.ToolTip>
										</TextBlock>

											<TextBlock Grid.Column="1"
													   Margin="12,0,0,0">
											<Run Text="Lv." />
											<Run Text="{Binding Ship.Level, Mode=OneWay}"
												 Style="{DynamicResource EmphaticTextElementStyleKey}" />
											<LineBreak />
											<Run Text="{Binding Ship.ExpForNextLevel, StringFormat=Next: {0}, Mode=OneWay}"
												 FontSize="9" />
											</TextBlock>

											<Grid x:Name="HPIndicator"
												  Grid.Column="2"
												  Margin="12,1,12,0">
												<Grid.RowDefinitions>
													<RowDefinition Height="Auto" />
													<RowDefinition Height="Auto" />
												</Grid.RowDefinitions>
												<TextBlock>
												<Run Text="HP:" />
												<Run Text="{Binding Ship.HP.Current, Mode=OneWay}"
													 Style="{DynamicResource EmphaticTextElementStyleKey}" />
												<Run Text="{Binding Ship.HP.Maximum, StringFormat=/{0}, Mode=OneWay}" />
												</TextBlock>
												<controls:ColorIndicator Grid.Row="1"
																		 Height="6"
																		 LimitedValue="{Binding Ship.HP, Mode=OneWay}"
																		 Margin="0,2,0,0" />
											</Grid>

											<Grid x:Name="RepairIndicator"
												  Grid.Column="2"
												  Visibility="Collapsed"
												  Margin="8,2,8,0">
												<Border Background="{DynamicResource FleetRepairingBrushKey}"
														Opacity=".4" />
												<TextBlock Text="入渠中"
														   Style="{DynamicResource EmphaticTextStyleKey}"
														   HorizontalAlignment="Center" />
											</Grid>

											<TextBlock Grid.Column="3">
											<InlineUIContainer>
												<controls:ConditionIcon ConditionType="{Binding Ship.ConditionType, Mode=OneWay}" />
											</InlineUIContainer>
											<Run Text="{Binding Ship.Condition, Mode=OneWay}"
												 Style="{DynamicResource EmphaticTextElementStyleKey}" />
											<LineBreak />
											<Run Text="condition"
												 FontSize="9" />
											</TextBlock>
										</Grid>
										<Rectangle Height="1"
												   Margin="0,4,0,0"
												   Style="{DynamicResource SeparatorRectangleStyleKey}" />
									</StackPanel>

									<DataTemplate.Triggers>
										<DataTrigger Binding="{Binding Ship.IsInRepairing}"
													 Value="True">
											<Setter TargetName="HPIndicator"
													Property="Opacity"
													Value=".2" />
											<Setter TargetName="RepairIndicator"
													Property="Visibility"
													Value="Visible" />
										</DataTrigger>
									</DataTemplate.Triggers>
								</DataTemplate>
							</ItemsControl.ItemTemplate>
						</ItemsControl>
					</ScrollViewer>
				</DockPanel>
			</Border>

			<Grid Grid.Column="1">
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
				</Grid.RowDefinitions>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>

				<Border Grid.Row="0"
						Grid.Column="0">
					<StackPanel>
						<TextBlock Text="データ" />

						<Rectangle Height="1"
								   Margin="0,7,0,3"
								   Style="{DynamicResource SeparatorRectangleStyleKey}" />

						<metro2:CallMethodButton Content="艦娘一覧"
												 Padding="12,8"
												 Margin="0,5,0,8"
												 MethodName="ShowShipCatalog" />

						<metro2:CallMethodButton Content="装備一覧"
												 Padding="12,8"
												 MethodName="ShowSlotItemCatalog" />
					</StackPanel>
				</Border>

				<metro2:CallMethodButton Grid.Row="0"
										 Grid.Column="1"
										 Style="{StaticResource JumbButtonStyleKey}"
										 MethodName="Jump"
										 MethodParameter="Expeditions">
					<StackPanel DataContext="{Binding Content.Expeditions}">
						<TextBlock Text="{Binding Name}" />

						<Rectangle Height="1"
								   Margin="0,7,0,3"
								   Style="{DynamicResource SeparatorRectangleStyleKey}" />

						<ItemsControl ItemsSource="{Binding Fleets.Fleets}">
							<ItemsControl.ItemTemplate>
								<DataTemplate>
									<TextBlock x:Name="Expedition"
											   Style="{DynamicResource DefaultTextStyleKey}"
											   Margin="0,4,0,0">
										<Run Text="{Binding Id, Mode=OneWay, StringFormat=/{0}}"
											 Style="{DynamicResource EmphaticTextElementStyleKey}" />
										<Run x:Name="Remaining"
											 Text="{Binding Expedition.Remaining, StringFormat=- {0}, Mode=OneWay}" />
									</TextBlock>
									<DataTemplate.Triggers>
										<DataTrigger Binding="{Binding Id, Mode=OneWay}"
													 Value="1">
											<Setter TargetName="Expedition"
													Property="Visibility"
													Value="Collapsed" />
										</DataTrigger>
										<DataTrigger Binding="{Binding Expedition.IsInExecution}"
													 Value="False">
											<Setter TargetName="Remaining"
													Property="Text"
													Value="" />
										</DataTrigger>
									</DataTemplate.Triggers>
								</DataTemplate>
							</ItemsControl.ItemTemplate>
						</ItemsControl>
					</StackPanel>
				</metro2:CallMethodButton>

				<metro2:CallMethodButton Grid.Row="1"
										 Grid.Column="0"
										 Grid.ColumnSpan="2"
										 Style="{StaticResource JumbButtonStyleKey}"
										 MethodName="Jump"
										 MethodParameter="Quests">
					<StackPanel DataContext="{Binding Content.Quests}">
						<TextBlock Text="{Binding Name}" />

						<Rectangle Height="1"
								   Margin="0,7,0,3"
								   Style="{DynamicResource SeparatorRectangleStyleKey}" />

						<TextBlock Text="{Binding Resources.Quests_Untaken, Source={x:Static models:ResourceService.Current}, Mode=OneWay}"
								   Visibility="{Binding IsUntaken, Converter={StaticResource BooleanToVisibilityConverter}}"
								   HorizontalAlignment="Center"
								   Margin="0,5,0,0" />

						<ItemsControl ItemsSource="{Binding Current}"
									  Visibility="{Binding IsUntaken, Converter={StaticResource UniversalBooleanToVisibilityConverter}, ConverterParameter=Collapsed:Visible}">
							<ItemsControl.ItemTemplate>
								<DataTemplate>
									<Grid Margin="0,4,0,0">
										<Grid.Resources>
											<converters:QuestCategoryToColorConverter x:Key="QuestCategoryToColorConverterKey" />
										</Grid.Resources>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="*" />
										</Grid.ColumnDefinitions>
										<Rectangle Width="10"
												   Height="10"
												   VerticalAlignment="Center">
											<Rectangle.Fill>
												<SolidColorBrush Color="{Binding Category, Converter={StaticResource QuestCategoryToColorConverterKey}, Mode=OneWay}" />
											</Rectangle.Fill>
										</Rectangle>
										<TextBlock x:Name="Title"
												   Grid.Column="1"
												   Text="{Binding Title, Mode=OneWay}"
												   Style="{DynamicResource DefaultTextStyleKey}"
												   Margin="4,0,0,0" />
									</Grid>
									<DataTemplate.Triggers>
										<DataTrigger Binding="{Binding IsUntaken}"
													 Value="True">
											<Setter TargetName="Title"
													Property="Text"
													Value="{Binding Resources.Quest_Title_Untaken, Source={x:Static models:ResourceService.Current}, Mode=OneWay}" />
										</DataTrigger>
									</DataTemplate.Triggers>
								</DataTemplate>
							</ItemsControl.ItemTemplate>
						</ItemsControl>
					</StackPanel>
				</metro2:CallMethodButton>
			</Grid>

			<StackPanel Grid.Column="2">
				<metro2:CallMethodButton Style="{StaticResource JumbButtonStyleKey}"
										 MethodName="Jump"
										 MethodParameter="Repairyard">
					<StackPanel DataContext="{Binding Content.Shipyard}">
						<TextBlock Text="入渠ドック" />

						<Rectangle Height="1"
								   Margin="0,7,0,3"
								   Style="{DynamicResource SeparatorRectangleStyleKey}" />

						<ItemsControl ItemsSource="{Binding RepairingDocks}">
							<ItemsControl.ItemTemplate>
								<DataTemplate>
									<TextBlock Style="{DynamicResource DefaultTextStyleKey}"
											   Margin="0,4,0,0">
										<Run x:Name="ShipName"
											 Text="{Binding Ship, Mode=OneWay}"
											 Style="{DynamicResource EmphaticTextElementStyleKey}" />
										<Run x:Name="Remaining"
											 Text="{Binding Remaining, StringFormat=- {0}, Mode=OneWay}" />
									</TextBlock>
									<DataTemplate.Triggers>
										<DataTrigger Binding="{Binding State}"
													 Value="Locked">
											<Setter TargetName="Remaining"
													Property="Text"
													Value="{Binding Resources.Repairyard_Locked, Source={x:Static models:ResourceService.Current}, Mode=OneWay}" />
										</DataTrigger>
										<DataTrigger Binding="{Binding State}"
													 Value="Unlocked">
											<Setter TargetName="Remaining"
													Property="Text"
													Value="{Binding Resources.Reparyard_Unused, Source={x:Static models:ResourceService.Current}, Mode=OneWay}" />
											<Setter TargetName="ShipName"
													Property="Text"
													Value="" />
										</DataTrigger>
									</DataTemplate.Triggers>
								</DataTemplate>
							</ItemsControl.ItemTemplate>
						</ItemsControl>
					</StackPanel>
				</metro2:CallMethodButton>

				<metro2:CallMethodButton Style="{StaticResource JumbButtonStyleKey}"
										 MethodName="Jump"
										 MethodParameter="Dockyard">
					<StackPanel DataContext="{Binding Content.Shipyard}">
						<TextBlock Text="建造ドック" />

						<Rectangle Height="1"
								   Margin="0,7,0,3"
								   Style="{DynamicResource SeparatorRectangleStyleKey}" />

						<ItemsControl ItemsSource="{Binding BuildingDocks}">
							<ItemsControl.ItemTemplate>
								<DataTemplate>
									<TextBlock Style="{DynamicResource DefaultTextStyleKey}"
											   Margin="0,4,0,0">
										<Run x:Name="ShipName"
											 Text="{Binding Ship, Mode=OneWay}"
											 Style="{DynamicResource EmphaticTextElementStyleKey}" />
										<Run x:Name="Remaining"
											 Text="{Binding Remaining, StringFormat=- {0}, Mode=OneWay}" />
									</TextBlock>
									<DataTemplate.Triggers>
										<DataTrigger Binding="{Binding Source={x:Static models:Settings.Current}, Path=CanDisplayBuildingShipName}"
													 Value="False">
											<Setter TargetName="ShipName"
													Property="Text"
													Value="???" />
										</DataTrigger>
										<DataTrigger Binding="{Binding State}"
													 Value="Locked">
											<Setter TargetName="Remaining"
													Property="Text"
													Value="{Binding Resources.Dockyard_Locked, Source={x:Static models:ResourceService.Current}, Mode=OneWay}" />
											<Setter TargetName="ShipName"
													Property="Text"
													Value="" />
										</DataTrigger>
										<DataTrigger Binding="{Binding State}"
													 Value="Unlocked">
											<Setter TargetName="Remaining"
													Property="Text"
													Value="{Binding Resources.Dockyard_Unused, Source={x:Static models:ResourceService.Current}, Mode=OneWay}" />
											<Setter TargetName="ShipName"
													Property="Text"
													Value="" />
										</DataTrigger>
										<DataTrigger Binding="{Binding State}"
													 Value="Completed">
											<Setter TargetName="Remaining"
													Property="Text"
													Value="{Binding Resources.Dockyard_Complete, Source={x:Static models:ResourceService.Current}, Mode=OneWay}" />
										</DataTrigger>
									</DataTemplate.Triggers>
								</DataTemplate>
							</ItemsControl.ItemTemplate>
						</ItemsControl>
					</StackPanel>
				</metro2:CallMethodButton>
			</StackPanel>
		</Grid>
	</ScrollViewer>
</UserControl>